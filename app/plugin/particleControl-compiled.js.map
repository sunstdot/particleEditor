{"version":3,"sources":["particleControl.js"],"names":[],"mappings":";;;;;AAKA,IAAI,YAAY,EAAhB;AACA,IAAI,QAAQ,QAAQ,cAAR,CAAZ;AACA,IAAI,eAAe,SAAS,cAAT,CAAwB,kBAAxB,CAAnB;AACA,IAAI,gBAAgB,SAAS,cAAT,CAAwB,gBAAxB,CAApB;AACA,IAAI,kBAAkB,SAAS,cAAT,CAAwB,cAAxB,CAAtB;;AAEA,IAAI,cAAc,QAAQ,6BAAR,CAAlB;;AAEA,IAAI,YAAY,QAAQ,2BAAR,CAAhB;AACA,IAAI,QAAQ,QAAQ,2BAAR,CAAZ;AACA,IAAI,WAAW,CAAf;;;;;AAKA,SAAS,cAAT,GAA0B;AACtB,QAAI,YAAY,QAAQ,2BAAR,CAAhB;;AAEA,QAAI,YAAY,QAAQ,IAAR,CAAa,aAAb,CAAhB;AACA,QAAI,WAAW,EAAC,GAAG,GAAJ,EAAS,GAAG,GAAZ,EAAf;QAAiC,SAAS,EAA1C;QAA8C,KAA9C;AACA,QAAI,SAAJ,EAAe,UAAf;;AAEA,QAAI,MAAJ,EAAY,MAAZ,EAAoB,IAApB;;AAEA,aAAS,cAAT,CAAwB,QAAxB,EAAkC,MAAlC,EAA0C;AACtC,YAAK,OAAO,CAAP,GAAW,SAAS,CAArB,GAA0B,GAA9B,EAAmC;AAC/B,oBAAQ,OAAO,CAAP,GAAW,QAAX,GAAsB,CAAtB,GAA0B,GAAlC;AACH,SAFD,MAEO,IAAK,OAAO,CAAP,GAAW,SAAS,CAArB,GAA0B,GAA9B,EAAmC;AACtC,oBAAQ,OAAO,CAAP,GAAW,SAAS,CAApB,GAAwB,CAAC,EAAzB,GAA8B,EAAtC;AACH,SAFM,MAEA;AACH,gBAAI,MAAM,CAAC,OAAO,CAAP,GAAW,SAAS,CAArB,KAA2B,OAAO,CAAP,GAAW,SAAS,CAA/C,CAAV;AACA,gBAAI,SAAS,KAAK,IAAL,CAAU,GAAV,CAAb,C;AACA,gBAAI,QAAQ,MAAM,MAAN,GAAe,KAAK,EAAhC;AACH;AACD,eAAO,KAAK,IAAL,CAAU,KAAV,CAAP;AACH;;AAED,aAAS,IAAI,WAAJ,CAAgB;AACrB,eAAO;AACH,eAAG,GADA;AAEH,eAAG,GAFA;AAGH,eAAG,GAHA;AAIH,uBAAW,MAJR;AAKH,mBAAO,wBALJ,E;AAMH,yBAAa,MAAM,QAAN,CAAe,UAAf,CANV,E;AAOH,0BAAc;AAPX,SADc;AAUrB,mBAAW,KAVU,E;AAWrB,mBAAW,KAXU,E;AAYrB,mBAAW,KAZU,E;;;AAerB,eAAO,QAfc;AAgBrB,iBAAS,UAAU,MAAV,EAAkB;AACvB,kBAAM,OAAO,MAAP,CAAc,KAApB;AACH,SAlBoB;AAmBrB,oBAAY,UAAU,CAAV,EAAa;AACrB,mBAAO,CAAP,GAAW,UAAU,IAAV,CAAe,EAAE,KAAjB,CAAX;AACA,mBAAO,CAAP,GAAW,UAAU,IAAV,CAAe,EAAE,KAAjB,CAAX;AACA,oBAAQ,eAAe,QAAf,EAAyB,MAAzB,CAAR;;;AAGA,yBAAa,OAAO,CAAP,GAAW,SAAS,CAAjC;AACA,wBAAY,OAAO,CAAP,GAAW,SAAS,CAAhC;;;;AAIA,kBAAM,MAAN,CAAa,eAAb,EAA8B,EAAC,aAAa,SAAd,EAAyB,cAAc,UAAvC,EAA9B,E;;AAEA,4BAAgB,SAAhB,GAA4B,UAAU,SAAV,GAAsB,SAAtB,GAAkC,UAAlC,GAA+C,GAA3E;AACA,sBAAU,QAAV,CAAmB,WAAnB,EAAgC,EAAC,OAAO,EAAC,MAAM,OAAO,CAAd,EAAiB,MAAM,OAAO,CAA9B,EAAR,EAAhC;AACA,sBAAU,OAAV;AACH;AAnCoB,KAAhB,CAAT;;;AAuCA,WAAO,IAAI,SAAJ,CAAc;AACjB,YAAI,WADa;AAEjB,eAAO;AACH,oBAAQ,GADL;AAEH,oBAAQ,GAFL;AAGH,kBAAM,GAHH;AAIH,kBAAM,EAJH;AAKH,mBAAO,wBALJ;AAMH,uBAAW,CANR;AAOH,sBAAU,O;AAPP,SAFU;AAWjB,mBAAW;AAXM,KAAd,CAAP;;AAcA,aAAS,IAAI,WAAJ,CAAgB;AACrB,YAAI,cADiB;AAErB,eAAO;AACH,eAAG,GADA;AAEH,eAAG,EAFA;AAGH,eAAG,EAHA;AAIH,mBAAO,sB;AAJJ,SAFc;AAQrB,mBAAW,IARU;AASrB,mBAAW,KATU;AAUrB,mBAAW,IAVU;AAWrB,qBAAa,UAAU,CAAV,EAAa;AACtB,oBAAQ,GAAR,CAAY,wBAAZ;AACH,SAboB;AAcrB,mBAAW,UAAU,CAAV,EAAa;AACpB,oBAAQ,GAAR,CAAY,sBAAZ;AACH;AAhBoB,KAAhB,CAAT;;AAmBA,cAAU,QAAV,CAAmB,IAAnB;;AAEA,cAAU,QAAV,CAAmB,MAAnB;AACA,cAAU,QAAV,CAAmB,MAAnB;;AAEA,cAAU,MAAV;AACH;;AAED,IAAI,MAAM;;;;;AAKN,sBAAkB,YAAY;AAC1B,YAAI,YAAY,QAAQ,IAAR,CAAa,YAAb,CAAhB;AACA,YAAI,SAAS;AACT,qBAAS;AACL,2BAAW;AADN,aADA;AAIT,oBAAQ,CACJ;AACI,sBAAM,MADV;AAEI,sBAAM,OAFV;AAGI,6BAAa,EAHjB,E;AAII,0BAAU,E;AACN,+BAAW,E;AACP,+BAAO,CAAC,CAAC,GAAD,EAAM,SAAN,CAAD,EAAmB,CAAC,GAAD,EAAM,MAAN,CAAnB,EAAkC,CAAC,CAAD,EAAI,SAAJ,CAAlC,CADA;AAEP,+BAAO;AAFA;AADL,iBAJd;AAUI,0BAAU,E;AACN,iCAAa,EADP,E;AAEN,4BAAQ,EAFF,E;AAGN,+BAAW,E;AACP,+BAAO;AADA;AAHL,iBAVd;AAiBI,2BAAW,E;AACP,+BAAW,E;AACP,+BAAO;AADA;AADJ,iBAjBf;AAsBI,2BAAW,E;AACP,0BAAM,IADC,E;AAEP,4BAAQ,EAFD,E;AAGP,+BAAW,E;AACP,+BAAO;AADA;AAHJ,iBAtBf;AA6BI,yBAAS;AACL,2BAAO;AADF,iBA7Bb;AAgCI,uBAAO;AACH,0BAAM,IADH;AAEH,kCAAc,CAAC,CAAD,EAAI,MAAJ,CAFX,E;AAGH,+BAAW,E;AACP,oCAAY;AADL;AAHR,iBAhCX;AAuCI,wBAAQ;AACJ,+BAAW,UADP;AAEJ,+BAAW,E;AACP,+BAAO,MADA;AAEP,oCAAY;AAFL;AAFP,iBAvCZ;AA8CI,sBAAM,CAAC,EAAC,OAAO,EAAR,EAAY,MAAM,KAAlB,EAAD;AA9CV,aADI;AAJC,SAAb;AAuDA,eAAO,UAAU,KAAV,EAAiB;AACpB,mBAAO,MAAP,CAAc,CAAd,EAAiB,IAAjB,CAAsB,CAAtB,EAAyB,KAAzB,GAAiC,MAAM,KAAN,IAAe,CAAC,KAAK,MAAL,KAAgB,GAAjB,EAAsB,OAAtB,CAA8B,CAA9B,IAAmC,CAAnF;AACA,sBAAU,SAAV,CAAoB,MAApB,EAA4B,IAA5B;AACH,SAHD;AAIH,KAlEK;AAmEN,cAAU,YAAY;AAClB,YAAI,SAAS,EAAE,QAAF,CAAb;AACA,YAAI,QAAJ;YAAc,OAAd;YACI,UAAU,EAAE,WAAF,CADd;;AAGA,YAAI,iBAAiB,YAAY;AAC7B,oBAAQ,IAAR,CAAa,YAAY;AACrB,oBAAI,EAAE,IAAF,EAAQ,QAAR,CAAiB,IAAjB,CAAJ,EAA4B;AACxB,+BAAW,EAAE,IAAF,CAAX;AACH;AACJ,aAJD;AAKH,SAND;;AASA,eAAO,KAAP,CAAa,UAAU,CAAV,EAAa;AACtB,gBAAI,SAAS,EAAE,MAAF,IAAY,EAAE,UAA3B;AACA,mBAAO,OAAO,OAAP,KAAmB,KAA1B,EAAiC;AAC7B,yBAAS,OAAO,UAAhB;AACH;AACD,qBAAS,EAAE,MAAF,CAAT;AACA,gBAAI,WAAW,OAAO,IAAP,CAAY,WAAZ,CAAf;AACA,qBAAS,QAAT,CAAkB,KAAlB,EAAyB,WAAzB,CAAqC,IAArC;;AAEA,sBAAU,EAAE,MAAM,QAAR,CAAV;;AAEA,uBAAW,YAAY;AACnB,yBAAS,GAAT,CAAa,SAAb,EAAwB,MAAxB;AACA,wBAAQ,QAAR,CAAiB,IAAjB,EAAuB,WAAvB,CAAmC,KAAnC;AACA,wBAAQ,GAAR,CAAY,SAAZ,EAAuB,OAAvB;AACA;AACH,aALD,EAKG,GALH;AAMA,mBAAO,KAAP;AACH,SAlBD;;AAoBA;AAEH;AAvGK,CAAV;;AA0GA,IAAI,YAAY,YAAY;AACxB,UAAM,QAAN,CAAe,gBAAf,EAAiC,IAAI,gBAAJ,CAAqB,IAArB,CAA0B,IAA1B,CAAjC;;AAEA,QAAI,QAAJ;AACH,CAJD;;;AAOA,UAAU,IAAV,GAAiB,YAAY;AACzB;AACA;AACA,QAAI,gBAAJ,GAAuB,EAAC,OAAO,EAAR,EAAvB;AACH,CAJD;;AAMA,eAAe,SAAf","file":"particleControl-compiled.js","sourcesContent":["/*global $*/\r\n/**\r\n * 用于页面参数控制\r\n * Created by sunshitao on 2016/1/20.\r\n */\r\nlet component = {};\r\nlet event = require('../app/event');\r\nlet velocityWrap = document.getElementById(\"velocityRecorder\");\r\nlet gravityCanvas = document.getElementById(\"gravityControl\");\r\nlet gravityValueDom = document.getElementById(\"gravityValue\");\r\n//圆形\r\nlet CircleShape = require('../lib/zrender/shape/Circle');\r\n//线\r\nlet LineShape = require('../lib/zrender/shape/Line');\r\nlet color = require('../lib/zrender/tool/color');\r\nlet colorIdx = 0;\r\n/**\r\n * 重力控制部分,set _default position to sector and line in order\r\n *  to get a default gravity value\r\n */\r\nfunction gravityControl() {\r\n    let eventTool = require('../lib/zrender/tool/event');\r\n\r\n    let gravityZr = zrender.init(gravityCanvas);\r\n    let startPos = {x: 150, y: 100}, endPos = {}, angle;\r\n    let downValue, rightValue;\r\n    //定义shape\r\n    let circle, sector, line;\r\n\r\n    function calculateAngle(startPos, endPos) {\r\n        if ((endPos.y - startPos.y) < 0.2) {\r\n            angle = endPos.x > startPos ? 0 : 180;\r\n        } else if ((endPos.x - startPos.x) < 0.2) {\r\n            angle = endPos.y > startPos.y ? -90 : 90;\r\n        } else {\r\n            let tan = (endPos.y - startPos.y) / (endPos.x - startPos.x);\r\n            let radina = Math.atan(tan); //弧度\r\n            let angle = 180 * radina / Math.PI;\r\n        }\r\n        return Math.ceil(angle);\r\n    }\r\n\r\n    circle = new CircleShape({\r\n        style: {\r\n            x: 150,\r\n            y: 100,\r\n            r: 100,\r\n            brushType: 'both',\r\n            color: 'rgba(220, 20, 60, 0.5)',          // rgba supported\r\n            strokeColor: color.getColor(colorIdx++),  // getColor from default palette\r\n            textPosition: 'inside'\r\n        },\r\n        hoverable: false,   // default true\r\n        draggable: false,   // default false\r\n        clickable: false,   // default false\r\n\r\n        // 可自带任何有效自定义属性\r\n        _name: 'Hello~',\r\n        onclick: function (params) {\r\n            alert(params.target._name);\r\n        },\r\n        ondragover: function (e) {\r\n            endPos.x = eventTool.getX(e.event);\r\n            endPos.y = eventTool.getY(e.event);\r\n            angle = calculateAngle(startPos, endPos);\r\n\r\n            //算出重力值，向下和向右的重力默认为正\r\n            rightValue = endPos.x - startPos.x;\r\n            downValue = endPos.y - startPos.y;\r\n\r\n            //通过事件抛给 kinematics来修改主屏幕中的粒子特效\r\n\r\n            event.notify(\"modifyGravity\", {downGravity: downValue, rightGravity: rightValue}); //效率会很低\r\n\r\n            gravityValueDom.innerHTML = \"(向下重力\" + downValue + \" , 向右重力\" + rightValue + \")\";\r\n            gravityZr.modShape(\"lineScale\", {style: {xEnd: endPos.x, yEnd: endPos.y}});\r\n            gravityZr.refresh();\r\n        }\r\n    });\r\n    //画线，\r\n    //end position需要根据扇形圆心的位置实时计算\r\n    line = new LineShape({\r\n        id: 'lineScale',\r\n        style: {\r\n            xStart: 150,\r\n            yStart: 100,\r\n            xEnd: 100,\r\n            yEnd: 50,\r\n            color: 'rgba(255 255 240, 0.8)',\r\n            lineWidth: 4,\r\n            lineType: 'solid'  // default solid\r\n        },\r\n        draggable: false\r\n    });\r\n    //drawLine\r\n    sector = new CircleShape({\r\n        id: 'sectorCursor',\r\n        style: {\r\n            x: 100,\r\n            y: 50,\r\n            r: 10,\r\n            color: 'rgba(25 25 112, 0.8)'          // rgba supported\r\n        },\r\n        draggable: true,\r\n        hoverable: false,\r\n        clickable: true,\r\n        ondragstart: function (e) {\r\n            console.log('-----------------start');\r\n        },\r\n        ondragend: function (e) {\r\n            console.log('-----------------end');\r\n        }\r\n    });\r\n\r\n    gravityZr.addShape(line);\r\n    // 圆形\r\n    gravityZr.addShape(circle);\r\n    gravityZr.addShape(sector);\r\n\r\n    gravityZr.render();\r\n}\r\n\r\nlet obj = {\r\n    /**\r\n     * canvas实现速度记录仪\r\n     * @param value\r\n     */\r\n    velocityRecorder: function () {\r\n        let myEcharts = echarts.init(velocityWrap);\r\n        let option = {\r\n            tooltip: {\r\n                formatter: \"{a} <br/>{b} : {c}%\"\r\n            },\r\n            series: [\r\n                {\r\n                    name: '速度记录',\r\n                    type: 'gauge',\r\n                    splitNumber: 10,       // 分割段数，默认为5\r\n                    axisLine: {            // 坐标轴线\r\n                        lineStyle: {       // 属性lineStyle控制线条样式\r\n                            color: [[0.2, '#228b22'], [0.8, '#48b'], [1, '#ff4500']],\r\n                            width: 8\r\n                        }\r\n                    },\r\n                    axisTick: {            // 坐标轴小标记\r\n                        splitNumber: 10,   // 每份split细分多少段\r\n                        length: 12,        // 属性length控制线长\r\n                        lineStyle: {       // 属性lineStyle控制线条样式\r\n                            color: 'auto'\r\n                        }\r\n                    },\r\n                    axisLabel: {           // 坐标轴文本标签，详见axis.axisLabel\r\n                        textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                            color: 'auto'\r\n                        }\r\n                    },\r\n                    splitLine: {           // 分隔线\r\n                        show: true,        // 默认显示，属性show控制显示与否\r\n                        length: 30,         // 属性length控制线长\r\n                        lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\r\n                            color: 'auto'\r\n                        }\r\n                    },\r\n                    pointer: {\r\n                        width: 5\r\n                    },\r\n                    title: {\r\n                        show: true,\r\n                        offsetCenter: [0, '-40%'],       // x, y，单位px\r\n                        textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                            fontWeight: 'bolder'\r\n                        }\r\n                    },\r\n                    detail: {\r\n                        formatter: '{value}迈',\r\n                        textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n                            color: 'auto',\r\n                            fontWeight: 'bolder'\r\n                        }\r\n                    },\r\n                    data: [{value: 50, name: '速度值'}]\r\n                }\r\n            ]\r\n        };\r\n        return function (param) {\r\n            option.series[0].data[0].value = param.value || (Math.random() * 100).toFixed(2) - 0;\r\n            myEcharts.setOption(option, true);\r\n        };\r\n    },\r\n    turnCard: function () {\r\n        let tabDom = $(\"#myTab\");\r\n        let eleFront, eleBack,\r\n            eleList = $(\".tabClass\");\r\n\r\n        let tabBackOrFront = function () {\r\n            eleList.each(function () {\r\n                if ($(this).hasClass(\"in\")) {\r\n                    eleFront = $(this);\r\n                }\r\n            });\r\n        };\r\n\r\n\r\n        tabDom.click(function (e) {\r\n            let target = e.target || e.srcElement;\r\n            while (target.tagName !== \"DIV\") {\r\n                target = target.parentNode;\r\n            }\r\n            target = $(target);\r\n            let eleValue = target.attr(\"ele-value\");\r\n            eleFront.addClass(\"out\").removeClass(\"in\");\r\n\r\n            eleBack = $(\"#\" + eleValue);\r\n\r\n            setTimeout(function () {\r\n                eleFront.css(\"display\", \"none\");\r\n                eleBack.addClass(\"in\").removeClass(\"out\");\r\n                eleBack.css(\"display\", \"block\");\r\n                tabBackOrFront();\r\n            }, 225);\r\n            return false;\r\n        });\r\n\r\n        tabBackOrFront();\r\n\r\n    }\r\n};\r\n\r\nlet bindEvent = function () {\r\n    event.register(\"notifyVelocity\", obj.velocityRecorder.bind(this));\r\n    //实现翻牌效果\r\n    obj.turnCard();\r\n};\r\n\r\n//模块执行函数\r\ncomponent.exec = function () {\r\n    bindEvent();\r\n    gravityControl();\r\n    obj.velocityRecorder()({value: 90});\r\n};\r\n\r\nexport default component;\r\n\r\n\r\n\r\n"]}